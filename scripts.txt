Inference flow and UI
Inference plow:
For this demo I will use one day as example, i will use 03 23. we have 4 cameras, which produced around 5 GB data, soin total we have 20GB video

python inference/main.py --date 2020_03_23 --clean False
This will trigger the entire flow that zhengmin has described in the diagram
By right this command need to be triggerd by the user by a cron job 

Whie this is runnning, let me switch to the UI to explain how the system look like in the front end
python webapp/webApp.py

Historical progress chart:
We have choosen a prediod and have run the inference process for the dates in this range.
From Jan to March 18 2020

You can switch to the object level view to look at historical proress for each object, this will show the count of each clsss.
This help the user to see if the construction is going right, eg we can see deck increase very fast and stablize in early stage, which make sense because decks the the supporting structure that need to be in pace first
where bracing start to be visible in late stage.



User can select each individual date to look at the summary of what happeed to that date.
So for camera, we aggregate the results from different samples, and select one to display here.
We are printing out the object class as well as the bounding boxes
And then we aggregate the result from all the 4 cameras, and obtain a final result correspondiong to that date, which is the result shown in the table.

Check run result and refresh
We have provided this ultility for user to overwrite the detection result
This is because the model prediction is not always corrrect, it could under detect some objects expecially those ocluted one. In that case, user can look at the samples, update the count based on manual inspection. Once user does tyhat, we wil reevaluate the percentage and update accoordingly. This is significant because the future runs will use this as a base. This does not need to happen everyday, user can do this may once in a week, so that the system can be calibrated if the models are under [erforming.

Other function is to allow a dynamic reference configuration. This config tells that how many pierces of each object class are expected, and what are the corresponding weight for that class in terms of evaluating the final percentage. This is after considering that keppel's current progress is taking dynamic references from time to time. So this is another value added functin to help them achieve that.


